#include <iostream>
#include <set>
#include <string>
#include <map>
#include <vector>

int main() {
    
    /*task A. Разные*/
    
    int N=0; //создаем переменную для хранения количества различных чисел
    std::cin >> N; //сохраняем значение в переменной

    std::set<int> numbers; //создаю set для того, чтобы хранить уникальные значения

    for (int i = 0; i < N; ++i) { //пока i меньше количества различных чисел, выполняется цикл заполнения множества элементами с консоли
        int num=0; //создаем переменную для хранения значений чисел
        std::cin >> num; //сохраняем значения чисел
        numbers.insert(num); //добавляем числа в set, чтобы автоматически отсортировать все поступающие числа и оставить только уникальные значения
    }

    std::cout << numbers.size() << std::endl; //выводим размер получившегося множества, где остались только уникальные значения
    
    
    
    /*task B. Списки по классам*/
    
    std::map <int, std::vector<std::string>> students; //создаем мапу с парами <класс, фамилия>
        
    int classNum=0; //создаем переменные для хранения номера класса и фамилии
    std::string surname;

    while (std::cin >> classNum >> surname) { //цикл осуществляется пока осуществляется ввод данных
        students[classNum].push_back(surname); //добавляем фамилию в вектор, соответствующий номеру класса в квадратных скобках
        }

    for (int i = 9; i <= 11; ++i) { //начиная с 9 класса и заканчивая 11 классом включительно проходят итерации цикла
        for (const auto &student : students[i]) { //ссылка на константную переменную (значение не будет меняться внутри цикла) типа данных, который будет определен компилятором автоматически; значения для переменной берутся из вектора students (фамилии), i обозначает определенный класс
            std::cout << i << " " << student << std::endl; //выводим класс и фамилию каждого ученика
            }
        }    
    
    
    
    /*task G. Хэширование с удалением*/
    
    std::set<std::string> stringSet; //создаем множество для хранения элементов

    char operation; //создаем переменные для хранения операций и слов
    std::string word;

    while (true) { //цикл выполняется пока не будет введен спец символ
        std::cin >> operation; //сохраняем значение операции
            
        if (operation == '#') { //если вводится спец символ, завершается программа
            break;
        }
        std::cin >> word; //сохраняем значение слова
            
        if (operation == '+') { //если вводится +,
            stringSet.insert(word); //то добавляем слово в множество
        } else if (operation == '-') { //если вводится -,
            stringSet.erase(word); //то удаляем слово из множества
        } else if (operation == '?') { //если вводится ?
            if (stringSet.find(word) != stringSet.end()) { //и если найдено слово в множестве,
                std::cout << "YES" << std::endl; //то выводим YES
            } else { //если не найдено,
                std::cout << "NO" << std::endl; //то выводим NO
            }
        }
    }
    
    return 0;
}
